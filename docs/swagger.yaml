basePath: /
definitions:
  course.courseData:
    properties:
      info:
        type: string
      name:
        type: string
      season:
        type: integer
      year:
        type: integer
    type: object
  course.studentsData:
    properties:
      accounts:
        items:
          type: string
        type: array
      names:
        items:
          type: string
        type: array
    type: object
  entity.CourseResp:
    properties:
      cid:
        type: integer
      info:
        type: string
      name:
        type: string
      season:
        type: integer
      year:
        type: integer
    type: object
  entity.Term:
    properties:
      season:
        type: integer
      year:
        type: integer
    type: object
  entity.UserInfoRes:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: integer
    type: object
  user.emailData:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  user.loginData:
    properties:
      account:
        type: string
      password:
        type: string
    required:
    - account
    - password
    type: object
  user.loginRes:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: integer
      token:
        type: string
    type: object
  user.loginTicketData:
    properties:
      authorization:
        type: string
      url:
        type: string
    required:
    - authorization
    - url
    type: object
  user.passwordData:
    properties:
      new:
        type: string
      old:
        type: string
    required:
    - new
    - old
    type: object
  user.registerData:
    properties:
      account:
        type: string
      password:
        type: string
    required:
    - account
    - password
    type: object
info:
  contact:
    name: Mogg
    url: https://github.com/MarcusMogg
  description: buaashow is a sample RESTful api server.
  title: buaashow
  version: "1.0"
paths:
  /course:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.CourseResp'
            type: array
      summary: 获取与当前用户相关的课程(教师创建、学生加入) 需用户登录
      tags:
      - course
    post:
      consumes:
      - application/json
      parameters:
      - description: 课程信息
        in: body
        name: coursedata
        required: true
        schema:
          $ref: '#/definitions/course.courseData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CourseResp'
      summary: 创建课程 需教师登录
      tags:
      - course
  /course/{cid}:
    delete:
      parameters:
      - description: Course ID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: 删除学生,需用户登录，当前用户需要是课程创建者
      tags:
      - course
  /course/{cid}/student/{uid}:
    delete:
      parameters:
      - description: Course ID
        in: path
        name: cid
        required: true
        type: integer
      - description: Student ID
        in: path
        name: uid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: 删除学生,需用户登录，当前用户有课程管理权限
      tags:
      - course
  /course/{id}:
    get:
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CourseResp'
      summary: 获取课程信息
      tags:
      - course
  /course/{id}/students:
    get:
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.UserInfoRes'
            type: array
      summary: 查看课程学生列表
      tags:
      - course
    post:
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      - description: 学生账号
        in: body
        name: accounts
        required: true
        schema:
          $ref: '#/definitions/course.studentsData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/course.studentsData'
      summary: 导入学生, 需用户登录，当前用户有课程管理权限
      tags:
      - course
  /terms:
    delete:
      parameters:
      - description: 学期信息
        in: body
        name: newTermData
        required: true
        schema:
          $ref: '#/definitions/entity.Term'
      produces:
      - application/json
      summary: 删除一个学期,需管理员登录，注意，会同步删除该学期相关的所有课程、实验
      tags:
      - term
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Term'
            type: array
      summary: 获取学期信息，从用户创建时间到当前时间段的所有学期数,需用户登录
      tags:
      - term
    post:
      parameters:
      - description: 学期信息
        in: body
        name: newTermData
        required: true
        schema:
          $ref: '#/definitions/entity.Term'
      produces:
      - application/json
      summary: 新增一个学期,需管理员登录,season 1春 2秋
      tags:
      - term
  /terms/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Term'
            type: array
      summary: 获取所有学期信息
      tags:
      - term
  /user/email:
    post:
      consumes:
      - application/json
      parameters:
      - description: 新邮箱
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/user.emailData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.loginRes'
      summary: 修改邮箱, 需用户登录
      tags:
      - User
  /user/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserInfoRes'
      summary: 获取当前用户信息，需用户登录
      tags:
      - User
  /user/info/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserInfoRes'
      summary: 获取指定id的用户信息
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 账号密码
        in: body
        name: logindata
        required: true
        schema:
          $ref: '#/definitions/user.loginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.loginRes'
      summary: 使用账号密码登录
      tags:
      - User
  /user/password:
    post:
      consumes:
      - application/json
      parameters:
      - description: 新旧密码
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/user.passwordData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.loginRes'
      summary: 修改密码, 需用户登录
      tags:
      - User
  /user/teacher:
    post:
      consumes:
      - application/json
      parameters:
      - description: 账号密码必选，邮箱可选
        in: body
        name: logindata
        required: true
        schema:
          $ref: '#/definitions/user.registerData'
      produces:
      - application/json
      summary: 创建教师账号 需管理员登录
      tags:
      - User
  /user/verify:
    post:
      consumes:
      - application/json
      parameters:
      - description: 云平台返回的ticket
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/user.loginTicketData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.loginRes'
      summary: 使用云平台登录
      tags:
      - User
swagger: "2.0"
