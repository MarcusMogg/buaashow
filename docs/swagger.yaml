basePath: /
definitions:
  request.EmailData:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.LoginData:
    properties:
      account:
        type: string
      password:
        type: string
    required:
    - account
    - password
    type: object
  request.LoginTicketData:
    properties:
      authorization:
        type: string
      url:
        type: string
    required:
    - authorization
    - url
    type: object
  request.PasswordData:
    properties:
      new:
        type: string
      old:
        type: string
    required:
    - new
    - old
    type: object
  response.LoginRes:
    properties:
      email:
        type: string
      id:
        type: integer
      role:
        type: integer
      token:
        type: string
    type: object
  response.UserInfoRes:
    properties:
      email:
        type: string
      id:
        type: integer
      role:
        type: integer
    type: object
info:
  contact:
    name: Mogg
    url: https://github.com/MarcusMogg
  description: buaashow is a sample RESTful api server.
  title: buaashow
  version: "1.0"
paths:
  /user/email:
    post:
      consumes:
      - application/json
      parameters:
      - description: 新邮箱
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/request.EmailData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginRes'
      summary: 修改邮箱
      tags:
      - User
  /user/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserInfoRes'
      summary: 获取当前用户信息
      tags:
      - User
  /user/info/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserInfoRes'
      summary: 获取指定id的用户信息
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 账号密码
        in: body
        name: logindata
        required: true
        schema:
          $ref: '#/definitions/request.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginRes'
      summary: 使用账号密码登录
      tags:
      - User
  /user/password:
    post:
      consumes:
      - application/json
      parameters:
      - description: 新旧密码
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/request.PasswordData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginRes'
      summary: 修改密码
      tags:
      - User
  /user/verify:
    post:
      consumes:
      - application/json
      parameters:
      - description: 云平台返回的ticket
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/request.LoginTicketData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginRes'
      summary: 使用云平台登录
      tags:
      - User
swagger: "2.0"
